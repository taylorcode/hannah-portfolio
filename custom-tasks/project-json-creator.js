// Generated by CoffeeScript 1.6.3
(function() {
  var RSVP, createKeyMap, exif, im, jsonKeyMap, _;

  _ = require('underscore');

  exif = require('exif2');

  RSVP = require('rsvp');

  im = require('imagemagick');

  jsonKeyMap = function(categories) {
    return _.map(categories, function(obj, key) {
      return {
        name: key,
        projects: _.map(obj, function(obj, key) {
          return {
            title: key,
            dir: key,
            images: _.map(obj, function(obj, key) {
              var img;
              img = {
                src: key
              };
              if (obj) {
                img.description = obj;
              }
              return img;
            })
          };
        })
      };
    });
  };

  createKeyMap = function(abspath, categories, category, project, filename) {
    return new RSVP.Promise(function(resolve, reject) {
      return im.readMetadata(abspath, function(err, metadata) {
        var c, p;
        if (categories[category]) {
          c = categories[category];
          if (!c[project]) {
            c[project] = {};
          }
          p = c[project];
        } else {
          c = categories[category] = {};
          p = c[project] = {};
        }
        if (metadata.exif) {
          p[filename] = metadata.exif.imageDescription || null;
        }
        return resolve();
      });
    });
  };

  module.exports = function(grunt) {
    return grunt.registerMultiTask("projectJSON", "Creates project JSON file.", function() {
      var categories, dest, done, exifPromises, src;
      done = this.async();
      src = this.data.src;
      dest = this.data.dest;
      categories = {};
      exifPromises = [];
      grunt.file.recurse(src, function(abspath, rootdir, subdir, filename) {
        var category, project, subDirParts;
        if (!subdir) {
          return;
        }
        if (filename.charAt(0) === '.') {
          return;
        }
        subDirParts = subdir.split('/');
        category = subDirParts[0];
        project = subDirParts[1];
        return exifPromises.push(createKeyMap(abspath, categories, category, project, filename));
      });
      RSVP.all(exifPromises).then(function() {
        grunt.file.write(dest, JSON.stringify(jsonKeyMap(categories)));
        return done();
      });
    });
  };

}).call(this);
